@using ClientDependency.Core.Mvc
@using Escc.ClientDependencyFramework
@using Escc.WebsiteStyleGuide
@model Escc.WebsiteStyleGuide.StyleGuidePage
@{
    Model.EsccWebsiteSkin = Skin.SelectedSkin();

    Model.Metadata.Title = "Buttons and navigation";
    Model.Metadata.DateCreated = "2014-01-07";
    Model.Metadata.IpsvPreferredTerms = "Website management";
    Model.Metadata.IsInSearch = false;

    Html.RequiresCss(CssFileAlias.Resolve("FormsSmall"));
    Html.RequiresCss(CssFileAlias.Resolve("NavigationSmall"));
    Html.RequiresCss(CssFileAlias.Resolve("FormsMedium"), MediaQueryAlias.Resolve("Medium"));
    Html.RequiresCss(CssFileAlias.Resolve("NavigationMedium"), MediaQueryAlias.Resolve("Medium"));
    Html.RequiresCss(CssFileAlias.Resolve("FormsLarge"), MediaQueryAlias.Resolve("Large"));
    Html.RequiresCss(CssFileAlias.Resolve("NavigationLarge"), MediaQueryAlias.Resolve("Large"));
}
@section Header {
    @{
        Html.RenderPartial("~/Views/Shared/_SkinChooser.cshtml");
    }
    @Model.TemplateHtml.Header
}
@section Metadata {
    @{ Html.RenderPartial("~/Views/Shared/_Metadata.cshtml"); }
}
<div class="full-page">
    <article>
        <div class="content text-content">
            @Html.Partial("~/Views/Buttons/ProgressBar.ascx")
            <h1>Buttons and navigation</h1>
            <h2>Progress bars</h2>

            <p>
                A progress bar uses stages set up in <code>web.config</code>. It normally appears just above the <code>h1</code> element, and can use plain text or links as shown above.
                Each stage expands to fit the text.
                Look at the <a href="https://github.com/east-sussex-county-council/Escc.WebsiteStyleGuide/blob/master/Escc.WebsiteStyleGuide/Web.config.example">web.config for this project</a> for an example.
            </p>

            <h2>Left navigation</h2>
            <p>
                We have three styles of left navigation in use: on the <a href="https://e-library.eastsussex.gov.uk">e-library</a>, our <a href="https://democracy.eastsussex.gov.uk">democracy pages</a> and the <a href="https://www.eastsussex.gov.uk/yourcouncil/about/keydocuments/councilplan">Council Plan</a>.
                None of these has yet been adopted as a standard style.
            </p>

            <h2>Buttons</h2>
            <p>
                Most buttons are inside a <a href="@Url.Action("Index", "SimpleForm")"><code>.simple-form</code></a>, <a href="@Url.Action("Index", "ShortForm")"><code>.short-form</code></a>
                or <a href="@Url.Action("Index", "ServiceForm") %>"><code>.service-form</code></a>, but sometimes applications need extra buttons for navigation.
            </p>

            <p>When there's only one thing you want people to do on the page, you can use <code>.main-action</code> on the parent element of the link:</p>
            <p class="main-action"><a href="javascript:return false()">Start</a></p>

            <p>For important actions in an application interface, apply <code>.button</code> to an <code>input</code> element to make it look like the ones we have in forms:</p>
            <input type="button" value="Example button" class="button" />

            <p>To disable a button use the <code>disabled="disabled"</code> attribute, but add the <code>.buttonDisabled</code> class too for older browsers.</p>
            <input type="button" value="Example button" class="button buttonDisabled" disabled="disabled" />

            <h2>Top or bottom navigation</h2>
            <p>
                For lesser actions, or to create a navigation bar, group one or more <code>input</code> elements or links inside <code>.button-nav</code>, which can be applied to either a <code>p</code> or a <code>ul</code> element.
                This grouping includes indentation so should be used outside <code>.content .text-content</code>.
            </p>
        </div>
        <ul class="button-nav">
            <li><input type="button" value="Example button" /></li>
            <li><a href="javascript:return false()">Example link</a></li>
            <li class="selected"><a href="javascript:return false()">li.selected for current section</a></li>
        </ul>
        <p class="content text-content">
            Apply both <code>.button-nav</code> and <code>.application-nav</code> to turn the effect into a navigaton toolbar.
            Again, this should be used outside <code>.content .text-content</code>.
        </p>
        <ul class="button-nav application-nav">
            <li><input type="button" value="Example button" /></li>
            <li><a href="javascript:return false()">Example link</a></li>
            <li><em>Emphasis for current section (better)</em></li>
        </ul>
        <div class="text-content content">
            <h2>Previous and next pages in a sequence</h2>
            <p>
                If a set of pages is designed to be read in order you can use the previous and next navigation style, typically placed at the bottom.
                It's not appropriate for a multi-page form, which should use submit buttons and the HTTP POST method.
            </p>
            <p>
                Load the <code>NavigationSmall</code>, <code>NavigationMedium</code> and <code>NavigationLarge</code> stylesheets, and apply <code>.prev-next</code>
                within the context of <code>.text-content</code>. <a href="https://github.com/east-sussex-county-council/Escc.WebsiteStyleGuide/blob/master/Escc.WebsiteStyleGuide/Escc.WebsiteStyleGuide/Views/Buttons/Index.cshtml">View the source of this page</a> for an example of the HTML.
            </p>
            <nav role="navigation">
                <div class="prev-next">
                    <p><a href="javascript:return false()" rel="prev"><em>Previous</em> <span>Title of the previous page</span></a></p>

                    <p><a href="javascript:return false()" rel="next"><em>Next</em> <span>Title of the next page</span></a></p>
                </div>
            </nav>
        </div>

    </article>
</div>